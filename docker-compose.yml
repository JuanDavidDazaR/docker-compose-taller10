services:
  productoDB:
    image: mysql:5.7
    container_name: productoDB
    ports:
      - "32000:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=mysql
      - MYSQL_DATABASE=productoDB
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    #networks:
      #- microservices-net

  usuarioDB:
    image: mysql:5.7
    container_name: usuarioDB
    ports:
      - "32001:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=mysql
      - MYSQL_DATABASE=usuarioDB
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    #networks:
      #- microservices-net

  ordenDB:
    image: mysql:5.7
    container_name: ordenDB
    ports:
      - "32002:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=mysql
      - MYSQL_DATABASE=ordenDB
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    #networks:
      #- microservices-net

  usuarios:
    build: ./microservicios/usuarios
    container_name: usuarios
    ports:
      - "3001:3001"
    links:
      - usuarioDB
    #depends_on:
      - usuarioDB
    #networks:
      #- microservices-net

  productos:
    build: ./microservicios/productos
    container_name: productos
    ports:
      - "3002:3002"
    links:
      - productoDB
    #depends_on:
      - productoDB
    #networks:
      #- microservices-net

  ordenes:
    build: ./microservicios/ordenes
    container_name: ordenes
    ports:
      - "3003:3003"
    links:
      - productoDB
      - usuarioDB
      - usuarios
      - productos
    #depends_on:
      - productoDB
      - usuarioDB
    #networks:
      #- microservices-net

  web:
    build: ./web
    container_name: web
    ports:
      - "8080:80"
    links:
      - usuarios
      - productos
      - ordenes
    #networks:
      #- microservices-net

# Define la red com√∫n para todos los servicios
#networks:
  #microservices-net:
    #driver: bridge

